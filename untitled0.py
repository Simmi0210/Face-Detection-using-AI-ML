# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cpatzy8I2P3_eP_CS-BH_-uq_GmNyGZl
"""

import pickle

with open('/content/images2.p','rb') as f:
  images = pickle.load(f)

with open('/content/labels2.p','rb') as f:
  labels = pickle.load(f)

"""# New Section"""

print(images.shape)
print(labels.shape)

set(labels)

from sklearn.preprocessing import LabelEncoder
le= LabelEncoder()
labels=le.fit_transform(labels)

set(labels)

le.inverse_transform([0])

import numpy as np
n_persons = len(set(labels))
print("Number of person:",n_persons)
l=le.inverse_transform(np.arange(n_persons))
for i in range(len(l)):
  print(i,'--->',l[i])

import matplotlib.pyplot as plt
plt.imshow(images[25],cmap='gray')
plt.show()

import cv2

def preprocessing(img):
  img=cv2.equalizeHist(img)
  img=img.reshape(200,200,1)
  img=img/255
  return img

images = np.array(list(map(preprocessing,images)))
print('Shape of the images:',images.shape)

from keras.utils import to_categorical
labels = to_categorical(labels)

from keras.models import Sequential
from keras.layers import Dense
from keras.optimizers import Adam

from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten

def Lenet_Model():
  model = Sequential()
  model.add(Conv2D(30, (5,5), input_shape=(200,200,1), activation="relu"))
  model.add(Conv2D(15,(4,4),activation= 'relu'))

  #model.add(Conv2D(7,(5,3),activation= 'relu'))
  model.add(MaxPooling2D(pool_size=(2,2)))
  #model.add(MaxPooling2D(pool_size=(2,2)))

  model.add(Flatten())

  model.add(Dense(400, activation='relu'))
  model.add(Dense(200, activation='relu'))
  model.add(Dense(150, activation='relu'))


  model.add(Dense(1,activation='softmax'))

  model.compile(Adam (learning_rate=0.01), loss='categorical_crossentropy',metrics=['accuracy'])

  return model

model=Lenet_Model()
model.summary()

h= model.fit(images,labels,validation_split=0.3,epochs=15)

model.save('final_model.h5')

